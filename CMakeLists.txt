## Do NOT edit this file unless you really know what you are doing
cmake_minimum_required(VERSION 3.16)
cmake_policy(SET CMP0076 NEW)
set(CMAKE_COLOR_DIAGNOSTICS ON)
set(CMAKE_COLOR_MAKEFILE ON)

## Set project name
project(geophysics-netcdf-programs VERSION 1.0 DESCRIPTION "Various utility programs for GA's NetCDF geophysical data format" LANGUAGES CXX C)
message(STATUS "Configuring geophysics-netcdf-programs")

include(cmake/Message-Functions.cmake)
include(cmake/Check-Functions.cmake)

reportvar(CMAKE_VERSION)
reportvar(CMAKE_SYSTEM_NAME)
reportvar(CMAKE_BUILD_TYPE)

# Set options
option(WITH_MPI "WITH_MPI" ON)
option(WITH_NETCDF "WITH_GDAL" ON)
option(WITH_GDAL "WITH_GDAL" ON)

reportvar(WITH_MPI)
reportvar(WITH_NETCDF)
reportvar(WITH_GDAL)

# Set the C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

set(CMAKE_EXECUTABLE_SUFFIX_C ".exe")
set(CMAKE_EXECUTABLE_SUFFIX_CXX ".exe")

# Set the compile/link flags
if(MSVC)
	add_compile_options(/O2)
	add_compile_definitions(_CRT_SECURE_NO_WARNINGS)
	add_compile_definitions(_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS)
else()
	add_compile_options(-O3 -Wno-unused-but-set-variable -Wno-sign-compare -Wno-format-security -Wno-tautological-constant-compare)
	link_libraries(-lstdc++fs)
endif()

if(CMAKE_COMPILER_IS_GNUCC)
	add_compile_options(-Wno-unused-result -Wno-date-time -Wno-error=date-time)
	#On GCC, even with -Wno-date-time, still get warings of the form: warning: macro "__DATE__" might prevent reproducible builds [-Wdate-time]
endif()

# Configure PkgConfig
find_package(PkgConfig QUIET)

# Configure GDAL
if(${WITH_GDAL})
	#find_package(GDAL REQUIRED)
endif()

# Configure CGAL
if(${WITH_CGAL})
	#find_package(GDAL REQUIRED)
endif()

# Configure MPI if opted for
if(${WITH_MPI})
	#find_package(MPI REQUIRED QUIET)
endif()

# Add the include directories
include_directories(src)

# Add the cpp-utils library submodule
add_subdirectory(submodules/cpp-utils)
add_subdirectory(submodules/geophysics-netcdf)

if(${WITH_MPI})
	add_compile_definitions(${target} PRIVATE -D_MPI_ENABLED -DOMPI_SKIP_MPICXX)
endif()

# Add the executables
set(target aseggdf2netcdf)
add_executable(${target} src/${target}.cpp)
target_link_libraries(${target} PRIVATE cpp-utils-static)
target_link_libraries(${target} PUBLIC geophysics-netcdf::static)
install(TARGETS ${target} OPTIONAL)

set(target intrepid2netcdf)
add_executable(${target} src/${target}.cpp)
target_link_libraries(${target} PRIVATE cpp-utils-static)
target_link_libraries(${target} PUBLIC geophysics-netcdf::static)
install(TARGETS ${target} OPTIONAL)

set(target geophysicsnc2shape)
add_executable(${target} src/${target}.cpp)
target_link_libraries(${target} PRIVATE cpp-utils-static)
target_link_libraries(${target} PUBLIC geophysics-netcdf::static)
if(${WITH_GDAL} AND GDAL_FOUND)
	target_compile_definitions(${target} PRIVATE -DHAVE_GDAL)
endif()
install(TARGETS ${target} OPTIONAL)

set(target test_geophysics_netcdf)
add_executable(${target} src/${target}.cpp)
target_link_libraries(${target} PRIVATE cpp-utils-static)
target_link_libraries(${target} PUBLIC geophysics-netcdf::static)
install(TARGETS ${target} OPTIONAL)
